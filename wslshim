#!/bin/bash
targetDir=$HOME/.local/bin
mkdir -p "${targetDir}"
cd "${targetDir}" || (echo could not access "${targetDir}" && exit 1)
if [[ "$1" == "-h" || -z "$1" ]]; then
  echo syntax: "$0" [-f] [windows executable]
  echo use the -f switch if the windows executable needs a filename as a parameter so that WSL path will be fileParamped to windows path
  echo make sure "${targetDir}" is in your path
  exit 0
fi

if [ "${1}" == "-f" ]; then
  fileParam=1
  shift
fi

if [ -L "${targetDir}"/"${1}" ]; then
  echo overwriting existing "${1}" symlink
  rm "${targetDir}"/"${1}"
elif [ -e "${targetDir}"/"${1}" ]; then
  echo "${1}" exists but is not a symlink, exiting.
  exit 1
fi

target="${targetDir}/${1}"
psFile=$(which "${1}".ps1)
if [ "${psFile}" ]; then
  winPath=$(wslpath -w "$(realpath "${psFile}")")
  echo '#!/bin/bash' >"${target}"
  if [ "$fileParam" ]; then
    cat >>"${target}" <<EOF
rp=\$(realpath "\${1}")
arg=\$(wslpath -w "\${rp}")
powershell -file "$winPath" "\${arg}"
EOF
  else
    printf "powershell -file '%s' \$@\n" "$winPath" >>"${target}"
  fi
  chmod u+x "${target}"
  echo success: "${1}".ps1 mapped to "${target}"
  exit 0
fi

if [ -z "${fileParam}" ]; then
  ln -s "$(which "${1}".exe)" "${1}" || ln -s "$(which "${1}".cmd)" "${1}" || ln -s "$(which "${1}".bat)" "${target}"
else
  targetLink="${targetDir}/${1}-link"
  if [ -L "${targetLink}" ]; then
    echo overwriting existing "${targetLink}" symlink
    rm "${targetLink}"
  elif [ -e "${targetLink}" ]; then
    echo "${targetLink}" already exists as a file, exiting
    exit 1
  fi

  ln -s "$(which "${1}".exe)" "${targetLink}" || ln -s "$(which "${1}".cmd)" "${targetLink}" || ln -s "$(which "${1}".bat)" "${targetLink}"
  cat >>"${target}" <<EOF
#!/bin/bash
rp=\$(realpath "\${1}")
arg=\$(wslpath -w "\${rp}")
"${targetLink}" "\${arg}"
EOF
  chmod u+x "${targetDir}"/"${1}"
  echo success: "${1}" mapped to "${targetDir}"/"${1}"
  exit 0
fi
